<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>