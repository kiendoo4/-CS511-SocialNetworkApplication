<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAONSURBVGhD7VnPTxNBFG62kJgA8eLRkxE0YvDk1X9AMHo0
        6t2LP9A/wMRED3pTE8JuUUNCBDTx4MWQeCLGi4IISuKPxLCz/WGlBSqkpZTxveUplr6yM7tbOLhf8iWk
        TN/7vt2ZN2+msQgRIkRw0TxgHzNMcS1uOqOG6UzFLScHXCXm4LP37v8suxfH0td2GYlsm2GJ63FTfAKR
        Uoum+IiGYw8yrRRtB3FDNuGThCc6z4rToen8hLdzFWNS9Aaj3zlsWM4kKyYAwcRELCEOUZbGIN4vTsUt
        UeAEhEJTLEH8HkoXLoxE8gIEL7OJQ6UoG1byPKUNB/Tkd0D8H0IuU3RT+oDos9s3Xi2XSJ2tj5KyYyQj
        jz//ITufZmT7cFrufZxkx25QFHC9kQqfcKuN/wXbBDz7KifHUyW5WlmXHE6PzbPfRUKJfheoOrmlkgms
        wj0DSTnybYVk1seZbQwgjX7nCsnRxGCqBV5jlguqwjtTBZK4PbwM4D6BGyapUoe7w3IBFbh/KC1LdabM
        VngaALo7ti58tQfE3jcLJK8a+VJF3ppckhfH83954EmajVFFaDtIlhqw2WIDKXL4Kz/3T7zIsuNV2JxI
        HSV53ggyfZCv0yWSvInp+VV2rCq1FjO2vVwQVc7kyiR7E0NfVtixyjSdYZLnDaj9H9ggipzN1xq4P/OL
        HatK3I9InjewdHFBVMkZuBfQAJZ0kucNMFDig6ixMQacIsnzho6BmxNLMlesVHGN2QKK8OHWcciuZxk2
        LkMtA8pT6K7ijssBfbZBk8fFraXGFNJZxEEMfC+ssTE56i5i5TIaxMCYKLIxWWqVUbwe4YIwDGJAZ2HD
        G7hM8rzRbNldXBCOeFDZN5iq4ueF2ipkzi7XjGt5qDr/oZUwU50kTw3wFqa5QCoMvYzqNnMInWm0lWEb
        wIMVydJAgANNqAbwQOP39g5vzNigHgzTAGi4RHJ8AA/1pjPBBd6OYRmAtv5tbFTGSY1PWHMHYREtcgnq
        MRwDYVyrECBYD1D5Yiu4AciVsE9S+nCA132qJoIZEGWYtucobbiAqdQN9Lyl820Ap2rYT74GpujAGzNW
        ANGPAXfB9tntlKXBwOoEh+x6bbeeAZF1S2XgauMHsMHgjg1Pb+ZfUSoGsFVxd9hd+YmJATZb7luxnJGX
        djE/VyhXlsvrEmnD37cnF5PYErvXIwPJI/S1CBEi/N+IxX4DpCHHxnJx3PcAAAAASUVORK5CYII=
</value>
  </data>
</root>